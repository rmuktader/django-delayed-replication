version: '3.9'
services:
  web:
    image: "replication:dev"
    build:
      target: development_build
      context: .
      args:
        DJANGO_ENV: development
    command: >
      bash -c "python manage.py migrate
      && python manage.py runserver 0.0.0.0:8000"
    environment:
      - DB_HOST=postgresql-master
      - DB_PORT=5432
      - DB_NAME=my_database
      - DB_USERNAME=my_user
      - DB_PASSWORD=my_password
      - DB_REPLICA_NAME=postgresql-slave
    ports:
      - "8000:8000"
      - "3000:3000" # for python debugger
    depends_on:
      - postgresql-master
      - postgresql-slave
    volumes:
      - .:/code

  postgresql-master:
    # image: 'bitnami/postgresql:10'
    build: postgresql
    cap_add:
      # NET_ADMIN is a kernel capability that (as one can imagine) allows you to reconfigure the network of a linux machine. This means that a pod with that capability can not only add itself to the Istio mesh, but also start interfering with the networking configuration of the other pods along with the node itself
      - NET_ADMIN
    ports:
      - '5432'
    volumes:
      - 'postgresql_master_data:/bitnami'
    environment:
      - POSTGRESQL_REPLICATION_MODE=master
      - POSTGRESQL_REPLICATION_USER=repl_user
      - POSTGRESQL_REPLICATION_PASSWORD=repl_password
      - POSTGRESQL_USERNAME=my_user
      - POSTGRESQL_PASSWORD=my_password
      - POSTGRESQL_DATABASE=my_database
  postgresql-slave:
    # image: 'bitnami/postgresql:10'
    build: postgresql
    cap_add:
      - NET_ADMIN
    ports:
      - '5432'
    depends_on:
      - postgresql-master
    environment:
      - POSTGRESQL_REPLICATION_MODE=slave
      - POSTGRESQL_REPLICATION_USER=repl_user
      - POSTGRESQL_REPLICATION_PASSWORD=repl_password
      - POSTGRESQL_USERNAME=my_user
      - POSTGRESQL_PASSWORD=my_password
      - POSTGRESQL_MASTER_HOST=postgresql-master
      - POSTGRESQL_MASTER_PORT_NUMBER=5432

volumes:
  postgresql_master_data:
    driver: local